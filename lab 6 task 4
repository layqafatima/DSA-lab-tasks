#include <iostream>
using namespace std;
#define SIZE 5

int queue[SIZE];
int front=-1,rear=-1;

bool isFull()
{
    return (front==0&&rear==SIZE-1)||(rear+1==front);
}

bool isEmpty()
{
    return front==-1;
}

void enqueue(int value)
{
    if(isFull())
        cout<<"Queue Overflow (Cannot insert) "<<value<<endl;
    else
    {
        if(front==-1)
            front=0;
        rear=(rear+1)%SIZE;
        queue[rear]=value;
        cout<<value<<" enqueued to queue"<<endl;
    }
}

void dequeue()
{
    if(isEmpty())
        cout<<"Queue Underflow! Nothing to dequeue"<<endl;
    else
    {
        cout<<queue[front]<<" dequeued from queue"<<endl;
        if(front==rear)
            front=rear=-1;
        else
            front=(front+1)%SIZE;
    }
}

void display()
{
    if(isEmpty())
        cout<<"Queue is empty"<<endl;
    else
    {
        cout<<"Queue elements: ";
        int i=front;
        while(true)
        {
            cout<<queue[i]<<" ";
            if(i==rear) break;
            i=(i+1)%SIZE;
        }
        cout<<endl;
    }
}

int main()
{
    int choice,value;
    while(true)
    {
        cout<<"Circular Queue Menu";
        cout<<"1. Enqueue\n2. Dequeue\n3. Display\n4. Exit\n";
        cout<<"Enter your choice: ";
        cin>>choice;
        if(choice==1)
        {
            cout<<"Enter value to enqueue: ";
            cin>>value;
            enqueue(value);
        }
        else if(choice==2)
            dequeue();
        else if(choice==3)
            display();
        else if(choice==4)
        {
            cout<<"Exiting"<<endl;
            break;
        }
        else
            cout<<"Invalid"<<endl;
    }
}
